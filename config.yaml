baseURL: "https://davido912.github.io/"
languageCode: "en-us"
title: "This is me!"
theme: hugo-profile

outputs:
  home:
    - "HTML"
    - "RSS"
    - "JSON"
  page:
    - "HTML"
    - "RSS"

Paginate: 10
enableRobotsTXT: true


markup:
  goldmark:
    renderer:
      unsafe: true

Menus:
  main:
    - identifier: technologies
      name: Technologies
      title: Technologies
      url: /technologies
      weight: 1


params:
  title: "Who am I?"
  description: Text about my cool site
  # staticPath: ""  # The path to serve the static files from
  favicon: "/fav.png"

  # Whether to serve bootstrap css and js files from CDN or not. Can be set to true, "css" or "js" to choose between
  # serving both, only the css, or only the js files through the CDN. Any other value will make so that CDN is not used.
  # Note the lack of "" in true, it should be of boolean type.
  useBootstrapCDN: false

  # Whether the fade animations on the home page will be enabled
  animate: true

  theme:
    # disableThemeToggle: true
    # defaultTheme: "light" # dark

  font:
    fontSize: 1rem # default: 1rem
    fontWeight: 400 # default: 400
    lineHeight: 1.5 # default: 1.5
    textAlign: left # default: left

  # color preference
  # color:
  #   textColor:
  #   secondaryTextColor:
  #   backgroundColor:
  #   secondaryBackgroundColor:
  #   primaryColor:
  #   secondaryColor:

  #   darkmode:
  #     textColor:
  #     secondaryTextColor:
  #     backgroundColor:
  #     secondaryBackgroundColor:
  #     primaryColor:
  #     secondaryColor:

  # If you want to customize the menu, you can change it here
  navbar:
    align: ms-auto # Left: ms-auto | center: mx-auto | right: me-auto | Default: ms-auto
    # brandLogo: "/logo.png" # Logo for the brand | default is the favicon variable
    showBrandLogo: false # Show brand logo in nav bar | default is true
    brandName: "Who am I?" # Brand name for the brand | default is the title variable
    disableSearch: true
    # searchPlaceholder: "Search"
    menus:
      disableAbout: false
      disableExperience: false
      disableEducation: false
      disableProjects: false
      disableAchievements: false
      disableContact: false

  hero:
    enable: true
    intro: "Heyo! I am"
    title: "David"
    subtitle: "I like to solve interesting problems with code"
    image: /images/programming.jpg
    bottomImage:
      enable: true
    roundImage: true # Make hero image circular | default false
    button:
      enable: true
      name: "Resume"
      url: "https://docs.google.com/document/export?format=pdf&id=1wM0gzmRYBuNwUh9pADLSVjs9OaLGj0q0"
      download: true
      newPage: false
    socialLinks:
      fontAwesomeIcons:
        # - icon: fab fa-github
        #   url: https://example.com
        - icon: fab fa-linkedin
          url: https://www.linkedin.com/in/david-ohayon-907b85138/
      customIcons: []
        # - icon: /fav.png
        #   url: "https://example.com"

  # About
  about:
    enable: true
    title: ""
    image: "/images/aboutme.jpeg"
    content: |-
      I'm a passionate programmer who loves to solve challenging problems. 
      I'm always excited to learn about new and emerging technologies and apply them in my work. 
      My expertise lies in backend and data-related topics, and I've worked on various projects ranging from automation, data ingestion (both batch and streaming), REST APIs and microservices to DevOps related topics.
      I strive to create elegant, efficient, and scalable solutions that deliver real value to the end-users.

      If you want to find out more about some of the technologies I've worked with, check out the technologies section.
    skills:
      enable: false
      title: ""
      items:
        - name: "Python" 
          img: /images/python-logo.png
        - name: "Go" 
          img: /images/gopher-logo.png
        - name: "Java" 
          img: /images/java-logo.png
        - name: "SQL" 
          img: "/images/db.png"
        - name: "Kubernetes" 
          img: /images/k8s-logo.png
        - name: "Terraform" 
          img: /images/terraform.png
        - name: "AWS" 
          img: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Amazon_Web_Services_Logo.svg/1280px-Amazon_Web_Services_Logo.svg.png"
        - name: "Docker" 
          img: "/images/docker.webp"
        - name: "CI/CD" 
          img: "/images/ci-cd.webp"
        - name: "Apache Kafka" 
          img: "/images/kafka.png"
        - name: "Spring Boot" 
          img: "/images/springboot.png"
        - name: "Redshift" 
          img: "/images/redshift.png"
        - name: "Snowflake" 
          img: "/images/snowflake.png"
        - name: "Grafana" 
          img: "/images/grafana.png"
        - name: "Prometheus" 
          img: "/images/prometheus.png"
        - name: "PostgreSQL" 
          img: "/images/postgresql.png"
        - name: "MySQL" 
          img: "/images/mysql.png"
        - name: "Flask" 
          img: "/images/flask.png"
        - name: "Helm" 
          img: "/images/helm.png"
        - name: "Drone" 
          img: "/images/drone-logo.png"
        - name: "CircleCI" 
          img: "/images/circleci.png"
        - name: "Apache Airflow" 
          img: "/images/airflow.png"



  # Experience
  experience:
    enable: true
    # title: "Custom Name"
    items:
      - job: "Senior Backend Engineer"
        company: "Meltwater GmbH"
        date: "June 2022 - present"
        featuredLink:
          enable: false
          name: "View the project"
        content: |-
          Worked in a backend team that handled over 1 billion events a day across many of our services. Many of the services exposed functionalities via
          REST API and they were written using Java/ Golang/ Python. Infrastructure required by our services was provisioned, managed and monitored by us (Terraform, ELK, Prom, Grafana).

          - Designed and implemented a Kafka Streams service written in Java that processed and validated 1 billion documents daily, improving delivery quality to end-customers.
          - Developed a Spring Boot based REST API that acted as a gateway between the application's website and different providers across the company. Leading to deprecation of legacy components and thus lower costs and ease of maintenance.
          - Built scalable data streaming services using Python and Go, which extracted data from social media providers such as Facebook, YouTube, and Twitter. The data constituted approximately 20% of the data used for the company's end-product.

      - job: "Software Developer"
        company: "Contentful"
        date: "July 2021 - June 2022"
        featuredLink:
          enable: false
        info:
          enable: false
          
        content: |-
          Worked in a data platform team responsible of managing and provisioning data related services. Additionally, automated data ingestion processes
          and improved data quality standards. 

          - Provisioned and managed infrastructure using Terraform and Kubernetes for the data platform team, enabling efficient development across multiple data functions.
          - Designed, developed, tested and monitored over 50 Airflow based ELT (extract, load and transform) pipelines written in Python/Go. The pipelines fueled business critical functionalities with data on a daily basis.
          - Worked on a company wide consolidated billing project that enabled monitoring all costs incurred by AWS based services. This improved cost awareness and led to the reduction of total AWS costs by 20%.
          

      - job: "Data Engineer"
        company: "Raisin GmbH"
        
        date: "April 2018 - July 2021"
        info:
          enable: false
        featuredLink:
          enable: false
          url: "https://example.com"
        content: |-
            Worked in a Data team which was responsible ingesting and monitoring data delivery for all company internal functions (e.g. marketing, SEO, HR, finance). Additionally,
            we provided analytics related dashboards and reporting for the entire company.


            - Led and completed a full migration from AWS Redshift to Snowflake and the relevant data pipelines/data ingestion services. This resulted in a significant improvement in general query and analytics dashboards performance.
            - Automation of data ingestion and general operations by using Apache Airflow and Python based pipelines which allowed jobs to be executed on higher frequency and improved data freshness.
            - Drove a project that led to the containerization of the data team’s entire setup which resulted in improved portability, consistency and scalability of our services and applications.

  # Education
  education:
    enable: false
    # title: "Custom Name"
    index: false
    # items:
    #   - title: "B.A International Business"
    #     school:
    #       name: "HTW, Berlin"
    #     date: "2013 - 2015"
    #     GPA: "3.8 out of 5.0"
    #     content: |-
    #       Extracurricular Activities
    #         - Lorem ipsum dolor sit amet consectetur adipisicing elit. 
    #         - Tempora esse, eaque delectus nulla quo doloribus itaque expedita alias natus optio totam maxime nihil excepturi velit a animi laborum hic similique.

  # Achievements
  achievements:
    enable: true
    title: "Certificates"
    items:
      - title: AWS Certified Solutions Architect – Associate
        url: https://www.credly.com/badges/9a79220d-6b8b-4886-a309-88952180ff9b?source=linked_in_profile
        img: /images/aws-sol-arch-badge.png
      - title: AWS Certified Developer – Associate
        img: /images/aws-dev-assoc.png
        url: https://www.credly.com/badges/b3aadc55-e19a-4834-8b9e-0bb8787e0b52?source=linked_in_profile
      - title: "CKAD: Certified Kubernetes Application Developer"
        img: /images/cka.png
        url: https://www.credly.com/badges/458b16df-7798-4218-b933-01429191cea7?source=linked_in_profile

  # projects
  projects:
    enable: false
    # title: "Custom Name"
    items:
      - title: Hugo Profile
        content: A highly customizable and mobile first Hugo template for personal portfolio and blog.
        image: /images/projects/profile.png
        featured:
          name: Demo
          link: https://hugo-profile.netlify.app
        badges:
          - "Hugo"
          - "Bootstrap"
          - "Javascript"
        links:
          - icon: fa fa-envelope
            url: mailto:?subject=Hugo%20Profile%20Template&body=Check%20it%20out:%20https%3a%2f%2fhugo-profile.netlify.app%2fblog%2fmarkdown-syntax%2f
          - icon: fab fa-github
            url: https://github.com/gurusabarish/hugo-profile
          - icon: fab fa-twitter
            url: https://twitter.com/intent/tweet?text=Check+it+out:&url=https%3A%2F%2Fgithub.com%2Fgurusabarish%2Fhugo-profile

      - title: Image Converter
        content: A web app to convert image to pdf, png to jpg, png to jpg and png to webp without database using django.
        image: /images/projects/converter.jpg
        featured:
          name: Demo
          link: https://django-converter.herokuapp.com
        badges:
          - "Django"
          - "Bootstrap"
        links:
          - icon: fab fa-github
            url: https://github.com/gurusabarish/converter

      - title: Hugo Profile V2
        content: A clean and simple Hugo template for personal portfolio and blog.
        image: /images/projects/profile2.jpg
        featured:
          name: Demo V2
          link: https://hugo-profile-2.netlify.app
        badges:
          - "Hugo"
          - "Bootstrap"
          - "Javascript"
        links:
          - icon: fab fa-github
            url: https://github.com/gurusabarish/HugoProfileV2

  #Contact
  contact:
    enable: true
    # title: "Custom Name"
    content: feel free to drop me a message, ask a question, or just say hi
    email: davidberlin912@gmail.com
    btnName: Send
    formspree:
      enable: true # `contact.email` value will be ignored
      formId: mqkowqqk # Take it from your form's endpoint, like 'https://formspree.io/f/abcdefgh'
    #   emailCaption: "Enter your email address"
    #   messageCaption: "Enter your message here"

  footer:
    recentPosts:
      path: "blogs"
      count: 3
      title: Recent Posts
      enable: true
      disableFeaturedImage: false
    socialNetworks:
      github: https://github.com
      linkedin: https://linkedin.com

  # List pages like blogs and posts
  listPages:
    disableFeaturedImage: false

  # Single pages like blog and post
  singlePages:
    readTime:
      enable: false
      content: "min read"
    scrollprogress:
      enable: false

  # For translations
  terms:
    read: "Read"
    toc: "Table Of Contents"
    copyright: "All rights reserved"
    pageNotFound: "Page not found"
    emailText: "Check out this site"

  datesFormat:
    article: "Jan 2, 2006"
    articleList: "Jan 2, 2006"
    articleRecent: "Jan 2, 2006"
